---
- name: debug changes
  debug: var=i_zone

- name: Confirm changes
  pause:
    prompt: 'Please review the changes in the last task and press enter to continue'
  when: check_route53_zones.send_to_aws | length != 0 and force | default("false") != "true"
  no_log: true

- name: var notify unversioned records
  set_fact:
    notify_message_inversioned: "{{ ansible_user }}: there are unversioned records for zone {{ zone }}\n"
    notify_color_warning: red
  when: check_route53_zones.json_diff.manual_changes | length != 0 

- name: var notify updated records
  set_fact:
    notify_message_changes: "{{ ansible_user }}: there are updated records for zone {{ zone }}\n"
  when: check_route53_zones.send_to_aws | length != 0 

- name: notify changes
  include: notify.yml
  vars:
    notify_message: "{{ notify_message_inversioned | default() + notify_message_changes | default() + check_route53_zones.json_diff | to_nice_json }}"
    notify_color: "{{ notify_color_warning | default('yellow') }}"
  when: check_route53_zones.json_diff.manual_changes | length != 0 or
        check_route53_zones.send_to_aws | length != 0

- route53:
    command: "{{ item.state |d('present')}}"
    zone: "{{ i_zone.zone }}"
    record: "{{ item.record }}"
    type: "{{ item.type }}"
    ttl: "{{ item.ttl | default(omit) }}"
    overwrite: "{{ item.overwrite | default(omit) }}"
    value: "{{ item.value }}"
    alias: "{{ item.alias | default(omit) }}"
    alias_hosted_zone_id: "{{ item.alias_hosted_zone_id | default(omit) }}"
    identifier: "{{ item.identifier | default(omit) }}"
    weight: "{{ item.weight | default(omit) }}"
    health_check: "{{ item.health_check | default(omit) }}"
    private_zone: "{{ check_route53_zones.private_zone }}"
    hosted_zone_id: "{{ check_route53_zones.hosted_zone_id }}"
    wait: False
  register: route53_output
  ignore_errors: yes
  with_items:
    - "{{ i_zone.records }}"

- name: notify errros
  include: notify.yml
  vars:
    notify_message: "{{ route53_output | to_nice_json }}"
    notify_color: red
  when: route53_output.failed is defined and route53_output.failed == true

- name: notify successfully completed
  include: notify.yml
  vars:
    notify_message: "{{ ansible_user }}: rebuild for zone {{ zone }} successfully completed"
    notify_color: green
  when: route53_output.failed is not defined and check_route53_zones.send_to_aws | length != 0